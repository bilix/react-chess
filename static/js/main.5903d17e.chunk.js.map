{"version":3,"sources":["App.styles.js","Components/Board/Board.styles.js","Pieces/Piece.js","Pieces/Pawn.js","Pieces/Knight.js","Pieces/Rook.js","Pieces/Queen.js","Pieces/King.js","Pieces/Bishop.js","BoardGenerator.js","Store/Reducers/Board/BoardReducer.js","Components/Board/Square.js","Store/Reducers/Players/PlayersReducer.js","Components/Board/PieceComponent.js","Components/Board/Board.js","Store/store.js","Components/Header/Header.styles.js","Components/Header/Header.js","Components/PlayerInfo/PlayerInfo.styles.js","Components/PlayerInfo/PieceIcon.js","Components/PlayerInfo/PlayerInfo.js","Components/Actions/Actions.styles.js","Components/Actions/ResetBoard.js","Components/Actions/Actions.js","App.js","serviceWorker.js","index.js"],"names":["AppContainer","styled","div","GameBoard","StyledSquare","props","selected","killable","available","getAdjacentBorders","adjacent","white","ret","length","border","Border","top","bottom","left","right","StyledPiece","currentPlayer","Piece","calculatePossibleMoves","calculateDiagonalMoves","position","friendlyPieces","enemyPieces","moves","isFriendly","square","includes","isEnemy","i","push","calculateVerticalHorizontalMoves","addIfNotFriendly","this","color","Pawn","toLeftAttack","isLeftColumn","toRightAttack","isRightColumn","firstMove","upN","upLeftN","upRightN","downN","downLeftN","downRightN","icon","name","Knight","upLeft","upRight","leftUp","rightUp","downLeft","downRight","leftDown","rightDown","isToTheLeft","isToTheRight","Rook","Queen","verticalHorizontal","diagonal","concat","King","up","down","leftN","rightN","Bishop","verticalBorder","horizontalBorder","getPiece","piece","getAdjacentMoves","board","addIfNoEnemy","adjacency","adjacentHasEnemy","squareNumber","n","initialState","selectedPiece","availableMoves","player1KilledPieces","player2KilledPieces","createSlice","reducers","selectSquare","state","action","payload","removeSquareSelection","setMoves","movePiece","destinationSquare","resetBoard","reducer","actions","playerPieces","player","positions","boardSelector","React","memo","children","useSelector","dispatch","useDispatch","isAvailableMove","adjacentMoves","isSelected","isKillable","isWhite","startWhite","Math","ceil","getSquareColor","onClick","key","selectPlayer","extraReducers","currentPlayerSelector","players","player1Pieces","player1PiecesSelector","player2Pieces","player2PiecesSelector","isCurrentPlayer","movements","Board","boardList","squares","data","id","generateBoard","map","elem","index","row","showStart","showEnd","renderSquare","store","configureStore","boardReducer","playersReducer","StyledHeader","Header","playerName","InfoContainer","InfoTitle","KilledPiecesContainer","StyledPieceIcon","PieceIcon","pieceObject","PlayerInfo","killedPieces","player1KilledPiecesSelector","player2KilledPiecesSelector","Button","button","ActionsContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5903d17e.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n    display: grid;\n    grid-template-columns: auto auto auto;\n    grid-template-rows: 75px auto auto;\n    grid-template-areas: \"....  header  ....\"\n                         \"player1  board  player2\"\n                         \"....  actions  ....\";\n    grid-auto-columns: min-content;\n`;","import styled from 'styled-components';\n\nexport const GameBoard = styled.div`\n    display: grid;\n    grid-template-columns: 20px repeat(8, 75px) 20px;\n    grid-template-rows: 20px repeat(8, 75px) 20px;\n    grid-area: board;\n    justify-self: center;\n    align-self: center;\n`;\n\nexport const StyledSquare = styled.div`\n    font-size: 45px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    user-select: none;\n    position: relative;\n    ${props => {\n        if (props.selected) {\n            return `\n                background-color: rgb(4, 41, 247, 0.7);\n                border: 4px solid rgb(4, 41, 247);\n            `;\n        } else if (props.killable) {\n            return `\n                background-color: rgb(244, 57, 0, 0.7);\n                border: 4px solid rgb(244, 57, 0);\n                cursor: pointer;\n            `;\n        } else if (props.available) {\n            return `\n                background-color: rgb(27, 145, 11, 0.7);\n                border: 4px solid rgb(27, 145, 11);\n                cursor: pointer;\n                ${getAdjacentBorders(props.adjacent)}\n            `;\n        } else if (props.white) {\n            return  `\n                background-color: rgb(223, 203, 167, 1);\n            `;\n        } else {\n            return `\n                background-color: rgb(125, 67, 38, 1)\n            `;\n        }\n\n    }}\n`;\n\nconst getAdjacentBorders = (adjacent) => {\n    let ret = ``;\n    if (!adjacent || adjacent.length === 0) return;\n    for (let border of adjacent) {\n        ret += `\n            border-${border}-width: 2px;\n        `;\n    }\n    return ret;\n}\n\nexport const Border = styled.div`\n    background-color: #491E10;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    user-select: none;\n    ${props => props.top && `\n        border-bottom: 1px solid #DFCBA7;\n    `}\n    ${props => props.bottom && `\n        border-top: 1px solid #DFCBA7;\n    `}\n    ${props => props.left && `\n        border-right: 1px solid #DFCBA7;\n    `}\n    ${props => props.right && `\n        border-left: 1px solid #DFCBA7;\n    `}\n`;\n\nexport const StyledPiece = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    ${props => {\n        if (props.currentPlayer) {\n            return  `cursor: pointer;`\n        } \n    }}\n    \n`;","class Piece {\n    constructor(props) {\n        this.color = props.color;\n    }\n\n    calculatePossibleMoves = () => [];\n\n    calculateDiagonalMoves = (position, friendlyPieces, enemyPieces) => {\n        let moves = [];\n        //up-left\n        const isFriendly = square => friendlyPieces.includes(square);\n        const isEnemy = square => enemyPieces.includes(square);\n        for (let i = position - 9; i > 0 && i % 8 !== 0; i -= 9) {\n            if (isFriendly(i)) break;\n            if (isEnemy(i)) {\n                moves.push(i);\n                break;\n            }\n            moves.push(i);\n        }\n        //up-right\n        for (let i = position - 7; i > 0 && i % 8 !== 1; i -= 7) {\n            if (isFriendly(i)) break;\n            if (isEnemy(i)) {\n                moves.push(i);\n                break;\n            }\n            moves.push(i);\n        }\n        //down-left\n        for (let i = position + 7; i < 64 && i % 8 !== 0; i += 7) {\n            if (isFriendly(i)) break;\n            if (isEnemy(i)) {\n                moves.push(i);\n                break;\n            }\n            moves.push(i);\n        }\n        //down-right\n        for (let i = position + 9; i < 64 && i % 8 !== 1; i += 9) {\n            if (isFriendly(i)) break;\n            if (isEnemy(i)) {\n                moves.push(i);\n                break;\n            }\n            moves.push(i);\n        }\n        return moves;\n    }\n\n    calculateVerticalHorizontalMoves = (position, friendlyPieces, enemyPieces) => {\n        let moves = [];\n        //up\n        const isFriendly = square => friendlyPieces.includes(square);\n        const isEnemy = square => enemyPieces.includes(square);\n        for (let i = position - 8; i > 0; i -= 8) {\n            if (isFriendly(i)) break;\n            if (isEnemy(i)) {\n                moves.push(i);\n                break;\n            }\n            moves.push(i);\n        }\n        //down\n        for (let i = position + 8; i < 64; i += 8) {\n            if (isFriendly(i)) break;\n            if (isEnemy(i)) {\n                moves.push(i);\n                break;\n            }\n            moves.push(i);\n        }\n        //left\n        for (let i = position - 1; i % 8 !== 0; i -= 1) {\n            if (isFriendly(i)) break;\n            if (isEnemy(i)) {\n                moves.push(i);\n                break;\n            }\n            moves.push(i);\n        }\n        //right\n        for (let i = position + 1; i % 8 !== 1; i += 1) {\n            if (isFriendly(i)) break;\n            if (isEnemy(i)) {\n                moves.push(i);\n                break;\n            }\n            moves.push(i);\n        }\n        return moves;\n    }\n\n    addIfNotFriendly = (position, friendlyPieces, moves) => {\n        if(!friendlyPieces.includes(position)) moves.push(position);\n    }\n}\n\nexport default Piece;","import Piece from './Piece';\nimport { isRightColumn, isLeftColumn, upN, downN, upLeftN, upRightN, downLeftN, downRightN } from '../BoardGenerator';\n\nclass Pawn extends Piece {\n    constructor(props) {\n        super(props);\n        this.icon = this.color === 'w' ? '♙' : '♟';\n        this.name = `${this.color}p`;\n    }\n\n    calculatePossibleMoves = (position, friendlyPieces, enemyPieces) => {\n        let moves = [];\n        const isEnemy = (square) => enemyPieces.includes(square);\n\n        const toLeftAttack = isLeftColumn(position) ? 0 : position;\n        const toRightAttack = isRightColumn(position) ? 0 : position;\n\n        const firstMove = this.color === 'w' ? position >= 49 : position <= 16;\n        if (this.color === 'w') {\n            !isEnemy(upN(position, 1)) && this.addIfNotFriendly(upN(position, 1), friendlyPieces, moves);\n            firstMove && !(isEnemy(upN(position, 1)) || isEnemy(upN(position, 2))) && this.addIfNotFriendly(upN(position, 2), friendlyPieces, moves);\n            (toLeftAttack && isEnemy(upLeftN(position, 1))) && moves.push(upLeftN(position, 1));\n            (toRightAttack && isEnemy(upRightN(position, 1))) && moves.push(upRightN(position, 1));\n        } else {\n            !isEnemy(downN(position, 1)) && this.addIfNotFriendly(downN(position, 1), friendlyPieces, moves);\n            firstMove && !(isEnemy(downN(position, 1)) || isEnemy(downN(position, 2))) && this.addIfNotFriendly(downN(position, 2), friendlyPieces, moves);\n            (toLeftAttack && isEnemy(downLeftN(position, 1))) && moves.push(downLeftN(position, 1));\n            (toRightAttack && isEnemy(downRightN(position, 1))) && moves.push(downRightN(position, 1));\n        }\n        return moves;\n    }\n}\n\nexport default Pawn;","import Piece from './Piece';\nimport { isRightColumn, isLeftColumn } from '../BoardGenerator';\n\nclass Knight extends Piece {\n    constructor(props) {\n        super(props);\n        this.icon = props.color === 'w' ? '♘' : '♞';\n        this.name = `${this.color}h`;\n    }\n\n    calculatePossibleMoves = (position, friendlyPieces) => {\n        let moves = [];\n        const upLeft = position - 17;\n        const upRight = position - 15;\n        const leftUp = position - 10;\n        const rightUp = position - 6;\n        const downLeft = position + 15;\n        const downRight = position + 17;\n        const leftDown = position + 6;\n        const rightDown = position + 10;\n\n        const isToTheLeft = (position) => isLeftColumn(position) || position % 8 === 2;\n        const isToTheRight = (position) => isRightColumn(position) || position % 8 === 7; \n\n        if (upLeft > 0 && !isRightColumn(upLeft)) \n            this.addIfNotFriendly(upLeft, friendlyPieces, moves);\n        if (upRight > 0 && !isLeftColumn(upRight)) \n            this.addIfNotFriendly(upRight, friendlyPieces, moves);\n        if (leftUp > 0 && !isToTheRight(leftUp)) \n            this.addIfNotFriendly(leftUp, friendlyPieces, moves);\n        if (rightUp > 0 && !isToTheLeft(rightUp)) \n            this.addIfNotFriendly(rightUp, friendlyPieces, moves);\n        if (downLeft < 64 && !isRightColumn(downLeft)) \n            this.addIfNotFriendly(downLeft, friendlyPieces, moves);\n        if (downRight < 64 && !isLeftColumn(downRight)) \n            this.addIfNotFriendly(downRight, friendlyPieces, moves);\n        if (leftDown < 64 && !isToTheRight(leftDown)) \n            this.addIfNotFriendly(leftDown, friendlyPieces, moves);\n        if (rightDown < 64 && !isToTheLeft(rightDown)) \n            this.addIfNotFriendly(rightDown, friendlyPieces, moves);\n\n        return moves;\n    }\n}\n\nexport default Knight;","import Piece from './Piece';\n\nclass Rook extends Piece {\n    constructor(props) {\n        super(props);\n        this.icon = props.color === 'w' ? '♖' : '♜';\n        this.name = `${this.color}r`;\n    }\n\n    calculatePossibleMoves = (position, friendlyPieces, enemyPieces) => {\n        return this.calculateVerticalHorizontalMoves(position, friendlyPieces, enemyPieces);\n    }\n}\n\nexport default Rook;","import Piece from './Piece';\n\nclass Queen extends Piece {\n    constructor(props) {\n        super(props);\n        this.icon = props.color === 'w' ? '♕' : '♛';\n        this.name = `${this.color}q`;\n    }\n\n    calculatePossibleMoves = (position, friendlyPieces, enemyPieces) => {\n        const verticalHorizontal = this.calculateVerticalHorizontalMoves(position, friendlyPieces, enemyPieces);\n        const diagonal = this.calculateDiagonalMoves(position, friendlyPieces, enemyPieces);\n        return verticalHorizontal.concat(diagonal);\n    }\n\n}\n\nexport default Queen;","import Piece from './Piece';\nimport { upN, downN, leftN, rightN, upLeftN, upRightN, downLeftN, downRightN, isLeftColumn, isRightColumn } from '../BoardGenerator';\n\nclass King extends Piece {\n    constructor(props) {\n        super(props);\n        this.icon = props.color === 'w' ? '♔' : '♚';\n        this.name = `${this.color}k`;\n    }\n    calculatePossibleMoves = (position, friendlyPieces) => {\n        let moves = [];\n\n        const up = upN(position, 1);\n        const down = downN(position, 1);\n        const left = leftN(position, 1);\n        const right = rightN(position, 1);\n        const upLeft = upLeftN(position, 1);\n        const upRight = upRightN(position, 1);\n        const downLeft = downLeftN(position , 1);\n        const downRight = downRightN(position, 1);\n\n    \n        if (up > 0)\n            this.addIfNotFriendly(up, friendlyPieces, moves);\n        if (down < 64)\n            this.addIfNotFriendly(down, friendlyPieces, moves);\n        if (!isLeftColumn(left))\n            this.addIfNotFriendly(left, friendlyPieces, moves);\n        if (!isRightColumn(right))\n            this.addIfNotFriendly(right, friendlyPieces, moves);\n        if (upLeft > 0 && !isLeftColumn(upLeft))\n            this.addIfNotFriendly(upLeft, friendlyPieces, moves);\n        if (upRight > 0 && !isRightColumn(upRight))\n            this.addIfNotFriendly(upRight, friendlyPieces, moves);\n        if (downLeft < 64 && !isLeftColumn(downLeft))\n            this.addIfNotFriendly(downLeft, friendlyPieces, moves);\n        if (downRight < 64 && !isRightColumn(downRight)) \n            this.addIfNotFriendly(downRight, friendlyPieces, moves);\n    \n        return moves;\n    }\n}\n\nexport default King;","import Piece from './Piece';\n\nclass Bishop extends Piece {\n    constructor(props) {\n        super(props);\n        this.icon = props.color === 'w' ? '♗' : '♝';\n        this.name = `${this.color}b`;\n    }\n\n    calculatePossibleMoves = (position, friendlyPieces, enemyPieces) => {\n        return this.calculateDiagonalMoves(position, friendlyPieces, enemyPieces);\n    }\n}\n\nexport default Bishop;","import Pawn from './Pieces/Pawn';\nimport Knight from './Pieces/Knight';\nimport Rook from './Pieces/Rook';\nimport Queen from './Pieces/Queen';\nimport King from './Pieces/King';\nimport Bishop from './Pieces/Bishop';\n\nexport const initialBoard = [\n    'br','bh','bb','bq','bk','bb','bh','br',\n    'bp','bp','bp','bp','bp','bp','bp','bp',\n    '','','','','','','','',\n    '','','','','','','','',\n    '','','','','','','','',\n    '','','','','','','','',\n    'wp','wp','wp','wp','wp','wp','wp','wp',\n    'wr','wh','wb','wq','wk','wb','wh','wr'\n];\n\nexport const verticalBorder = [8,7,6,5,4,3,2,1];\nexport const horizontalBorder = ['', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', ''];\n\nexport const getPiece = (piece, color) => {\n    switch (piece) {\n        case 'p':\n            return new Pawn({color});\n        case 'r':\n            return new Rook({color});\n        case 'h':\n            return new Knight({color});\n        case 'q':\n            return new Queen({color});\n        case 'k':\n            return new King({color});\n        case 'b':\n            return new Bishop({color});\n        default:\n            return null;\n    }\n}\n\nexport const generateBoard = (board) => {\n    let squares = [];\n    let squareNumber = 1;\n    for (let data of board) {\n        if (!data) {\n            squares.push({\n                id: squareNumber++,\n                piece: null,\n            })\n        } else {\n            const color = data[0];\n            const piece = data[1];\n            squares.push({\n                piece: getPiece(piece, color),\n                id: squareNumber++,\n            })\n        }\n    }\n    return squares;\n}\n\nexport const getSquareColor = (squareNumber) => {\n    let row = Math.ceil(squareNumber/8);\n    let startWhite = row % 2 === 1;\n    return (startWhite && ((squareNumber % 8) % 2) === 1) || (!startWhite && ((squareNumber % 8) % 2) === 0);\n}\n\nexport const getAdjacentMoves = (square, moves, board) => {\n    let adjacent = [];\n    const left = square - 1;\n    const right = square + 1;\n    const top = square - 8;\n    const bottom = square + 8;\n\n    const adjacentHasEnemy = (position) => {\n        return !!board[position - 1]\n    };\n    const addIfNoEnemy = (position, adjacency) => !adjacentHasEnemy(position) && adjacent.push(adjacency);\n    \n    if (moves.includes(left) && !isRightColumn(left)) addIfNoEnemy(left, 'left');\n    if (moves.includes(right) && !isLeftColumn(right)) addIfNoEnemy(right, 'right');\n    if (moves.includes(top) && top > 0) addIfNoEnemy(top, 'top');\n    if (moves.includes(bottom) && bottom < 64) addIfNoEnemy(bottom, 'bottom');\n\n    return adjacent;\n}\n\nexport const getColorFromPlayer = (player) => player === 1 ? 'w' : 'b';\nexport const getPlayerFromColor = (color) => color === 'w' ? 1 : 2;\n\nexport const isRightColumn = (squareNumber) => squareNumber % 8 === 0;\nexport const isLeftColumn = (squareNumber) => squareNumber % 8 === 1;\n\nexport const upN = (position, n) => position - 8*n;\nexport const downN = (position, n) => position + 8*n;\nexport const leftN = (position, n) => position - n;\nexport const rightN = (position, n) => position + n;\nexport const upRightN = (position, n) => position - n*7;\nexport const upLeftN = (position, n) => position - n*9;\nexport const downLeftN = (position, n) => position + n*7;\nexport const downRightN = (position, n) => position + n*9;\n","import {createSlice} from '@reduxjs/toolkit';\nimport { initialBoard } from '../../../BoardGenerator';\n\nconst initialState = {\n    board: initialBoard,\n    selectedPiece: {\n        square: 0,\n        piece: '',\n    },\n    availableMoves: [],\n    player1KilledPieces: [],\n    player2KilledPieces: [],\n};\n\nconst {reducer, actions} = createSlice({\n    name: 'board',\n    initialState,\n    reducers: {\n        selectSquare(state, action) {\n            state.selectedPiece = action.payload;\n        },\n        removeSquareSelection(state) {\n            state.selectedPiece = {\n                square: 0,\n                piece: '',\n            };\n        },\n        setMoves(state, action) {\n            state.availableMoves = action.payload;\n        },\n        movePiece(state, action) {\n            const destinationSquare = state.board[action.payload - 1];\n            if (destinationSquare) {\n                const color = destinationSquare[0];\n                const piece = destinationSquare[1];\n                if (color === 'w') state.player1KilledPieces.push(piece);\n                else state.player2KilledPieces.push(piece);\n            }\n\n            state.board[state.selectedPiece.square - 1] = '';\n            state.board[action.payload - 1] = state.selectedPiece.piece;\n            state.selectedPiece = {\n                square: 0,\n                piece: '',\n            };\n            state.availableMoves = [];\n        },\n        resetBoard: (state) => initialState,\n    }\n});\n\nconst playerPieces = (player, board) => {\n    let positions = [];\n    const color = player === 1 ? 'w' : 'b';\n    for (let i = 0; i < board.length; i++) {\n        if (board[i]) {\n            if(board[i][0] === color) positions.push(i+1);\n        }\n    }\n    return positions;\n}\n\nexport const player1PiecesSelector = (state) => {\n    const board = state.board.board;\n    return playerPieces(1, board);\n};\n\nexport const player2PiecesSelector = (state) => {\n    const board = state.board.board;\n    return playerPieces(2, board);\n};\nexport const  boardSelector = (state) => state.board;\nexport const player1KilledPiecesSelector = (state) => state.board.player1KilledPieces;\nexport const player2KilledPiecesSelector = (state) => state.board.player2KilledPieces;\n\nexport const {selectSquare, removeSquareSelection, setMoves, movePiece, resetBoard} = actions;\n\nexport default reducer;","import React from 'react';\nimport { StyledSquare } from './Board.styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { movePiece, boardSelector } from '../../Store/Reducers/Board/BoardReducer';\nimport { getSquareColor, getAdjacentMoves } from '../../BoardGenerator';\n\nconst Square = ({squareNumber, children}) => {\n    const board = useSelector(state => boardSelector(state));\n    const dispatch = useDispatch();\n\n    const isAvailableMove = board.availableMoves.includes(squareNumber);\n    if (isAvailableMove) {\n        //to fix double borders, look for better solution\n        var adjacentMoves = getAdjacentMoves(squareNumber, board.availableMoves, board.board);\n    }\n\n    const isSelected = squareNumber === board.selectedPiece.square;\n    const isKillable = isAvailableMove && children !== null;\n    const isWhite = getSquareColor(squareNumber);\n\n    const handleClick = () => {\n        if (isAvailableMove) {\n            dispatch(movePiece(squareNumber));\n        }\n    }\n    return (\n        <StyledSquare adjacent={adjacentMoves} onClick={() => handleClick()} key={`square_${squareNumber}`} killable={isKillable} available={isAvailableMove} selected={isSelected} white={isWhite}>\n            {children}\n        </StyledSquare>\n    )\n};\n\nexport default React.memo(Square);","import {createSlice} from '@reduxjs/toolkit';\nimport {movePiece, resetBoard} from '../Board/BoardReducer';\n\nconst {reducer, actions} = createSlice({\n    name: 'players',\n    initialState: {\n        currentPlayer: 1,\n    },\n    reducers: {\n        selectPlayer(state, action) {\n            state.currentPlayer = action.payload;\n        },\n    },\n    extraReducers: {\n        [movePiece]: (state) => {\n          state.currentPlayer = state.currentPlayer === 1 ? 2 : 1;\n        },\n        [resetBoard]: (state) => {\n            state.currentPlayer = 1;\n        }\n      }\n});\n\nexport const currentPlayerSelector = (state) => state.players.currentPlayer;\n\nexport const {selectPlayer} = actions;\n\nexport default reducer;","import React from 'react';\nimport { StyledPiece } from './Board.styles';\nimport { selectSquare, setMoves } from '../../Store/Reducers/Board/BoardReducer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { currentPlayerSelector } from '../../Store/Reducers/Players/PlayersReducer';\nimport { player1PiecesSelector, player2PiecesSelector } from '../../Store/Reducers/Board/BoardReducer';\nimport { getPlayerFromColor } from '../../BoardGenerator';\n\nconst PieceComponent = ({piece, position}) =>{\n    const currentPlayer = useSelector(state => currentPlayerSelector(state));\n    const player1Pieces = useSelector(state => player1PiecesSelector(state));\n    const player2Pieces = useSelector(state => player2PiecesSelector(state));\n    const dispatch = useDispatch();\n    \n    const player = getPlayerFromColor(piece.color);\n\n    const friendlyPieces = player === 1 ? player1Pieces : player2Pieces;\n    const enemyPieces = player === 1 ? player2Pieces : player1Pieces;\n\n    const isCurrentPlayer = player === currentPlayer;\n\n\n    const handleClick = () => {\n        if (!isCurrentPlayer) return null;\n        dispatch(selectSquare({\n            square: position,\n            piece: piece.name,\n        }));\n        const movements = piece.calculatePossibleMoves(position, friendlyPieces, enemyPieces);\n        dispatch(setMoves(movements));\n    }\n\n    return (\n        <StyledPiece currentPlayer={isCurrentPlayer} onClick={handleClick}>\n            {piece.icon}\n        </StyledPiece>\n    )\n};\n\nexport default React.memo(PieceComponent);","import React from 'react';\nimport { GameBoard, Border } from './Board.styles';\nimport Square from './Square';\nimport { generateBoard, verticalBorder, horizontalBorder, isLeftColumn, isRightColumn } from '../../BoardGenerator';\nimport PieceComponent from './PieceComponent';\nimport {useSelector} from 'react-redux';\nimport { boardSelector } from '../../Store/Reducers/Board/BoardReducer';\n\nconst renderSquare = (square) => {\n    const row = Math.ceil(square.id/8);\n    const showStart = isLeftColumn(square.id);\n    const showEnd = isRightColumn(square.id);\n    return (\n        <>\n            {showStart && <Border key={`border_left_${verticalBorder[row-1]}`} left>{verticalBorder[row-1]}</Border>}\n            <Square squareNumber={square.id}>\n                {square.piece && \n                    <PieceComponent position={square.id} piece={square.piece} />\n                }\n            </Square>\n            {showEnd && <Border key={`border_right_${verticalBorder[row-1]}`} right>{verticalBorder[row-1]}</Border>}\n        </>\n    )\n}\n\nconst Board = () => {\n    const board = useSelector(state => boardSelector(state));\n    const boardList = generateBoard(board.board);\n    \n    return (\n        <GameBoard>\n            {horizontalBorder.map((elem, index) => <Border key={`border_top_${index}`} top={!!elem}>{elem}</Border>)}\n            {boardList.map(square => renderSquare(square))}\n            {horizontalBorder.map((elem, index) => <Border key={`border_bottom_${index}`} bottom={!!elem}>{elem}</Border>)}\n        </GameBoard>\n    )\n};\n\nexport default Board;","import {configureStore} from '@reduxjs/toolkit';\nimport boardReducer from './Reducers/Board/BoardReducer';\nimport playersReducer from './Reducers/Players/PlayersReducer';\n\nconst store = configureStore({\n    reducer: {\n        board: boardReducer,\n        players: playersReducer,\n    }\n});\n\nexport default store;","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n    grid-area: header;\n    align-self: center;\n    justify-self: center;\n    font-weight: bold;\n    font-size: 25px;\n`;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { currentPlayerSelector } from '../../Store/Reducers/Players/PlayersReducer';\nimport { StyledHeader } from './Header.styles';\n\nconst Header = () => {\n    const currentPlayer = useSelector(state => currentPlayerSelector(state));\n    const playerName = currentPlayer === 1 ? 'White' : 'Black';\n    \n    return (\n        <StyledHeader>\n            {`Current player: ${playerName}`}\n        </StyledHeader>\n    )\n}\n\nexport default Header;","import styled from 'styled-components';\n\nexport const InfoContainer = styled.div`\n    ${props =>{\n        if(props.player === 1) {\n            return `\n                grid-area: player1;\n            `;\n        } else {\n            return `\n                grid-area: player2;\n            `;\n        }\n    }}\n    justify-self: center;\n    padding: 50px 15px;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n`;\n\nexport const InfoTitle = styled.div`\n    font-weight: bold;\n    font-size: 20px;\n    align-text: center;\n`;\n\nexport const KilledPiecesContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    padding: 40px 0;\n    min-width: 200px;\n`;\n\nexport const StyledPieceIcon = styled.div`\n    font-size: 45px;\n`;","import React from 'react';\nimport { getPiece } from '../../BoardGenerator';\nimport { StyledPieceIcon } from './PlayerInfo.styles';\n\nconst PieceIcon = ({player, piece}) => {\n    const color = player === 1 ? 'w' : 'b';\n    const pieceObject = getPiece(piece, color);\n\n    return (\n        <StyledPieceIcon>\n            {pieceObject.icon}\n        </StyledPieceIcon>\n    )\n}\n\nexport default PieceIcon;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { player1KilledPiecesSelector, player2KilledPiecesSelector } from '../../Store/Reducers/Board/BoardReducer';\nimport { InfoContainer, InfoTitle, KilledPiecesContainer } from './PlayerInfo.styles';\nimport PieceIcon from './PieceIcon';\n\nconst PlayerInfo = ({player}) => {\n    const killedPieces = useSelector(state => player === 1 ? player1KilledPiecesSelector(state)\n                                        : player2KilledPiecesSelector(state))\n\n    return (\n        <InfoContainer player={player}>\n            <InfoTitle>Player {player}</InfoTitle>\n            <KilledPiecesContainer>\n                {killedPieces.map(piece => <PieceIcon piece={piece} player={player} />)}\n            </KilledPiecesContainer>\n        </InfoContainer>\n    )\n}\n\nexport default PlayerInfo;","import styled from 'styled-components';\n\nexport const Button = styled.button`\n    padding: 10px 20px;\n    color: white;\n    background-color: rgb(12, 138, 242);\n    border-radius: 5px;\n    cursor: pointer;\n    border: 0;\n    font-size: 20px;\n`;\n\nexport const ActionsContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    grid-area: actions;\n    height: 75px;\n`;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { resetBoard } from '../../Store/Reducers/Board/BoardReducer';\nimport { Button } from './Actions.styles';\n\nconst ResetBoard = () => {\n    const dispatch = useDispatch();\n    const handleClick = () => {\n        dispatch(resetBoard());\n    }\n    return (\n        <Button onClick={() => handleClick()}>\n            Reset Board\n        </Button>\n    )\n}\n\nexport default React.memo(ResetBoard);","import React from 'react';\nimport ResetBoard from './ResetBoard';\nimport { ActionsContainer } from './Actions.styles';\n\nconst Actions = () => (\n    <ActionsContainer>\n        <ResetBoard />\n    </ActionsContainer>\n);\n\nexport default React.memo(Actions);","import React from 'react';\nimport {AppContainer} from './App.styles';\nimport './App.css';\nimport Board from './Components/Board/Board';\nimport { Provider } from \"react-redux\";\nimport store from './Store/store';\nimport Header from './Components/Header/Header';\nimport PlayerInfo from './Components/PlayerInfo/PlayerInfo';\nimport Actions from './Components/Actions/Actions';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppContainer>\n        <Header />\n        <PlayerInfo player={1} />\n        <Board />\n        <PlayerInfo player={2} />\n        <Actions />\n      </AppContainer>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}