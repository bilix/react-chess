{"version":3,"sources":["App.styles.js","Components/Board/Board.styles.js","Game/Moves.js","Pieces/Piece.js","Pieces/Pawn.js","Pieces/Knight.js","Pieces/Rook.js","Pieces/Queen.js","Pieces/King.js","Pieces/Bishop.js","Game/BoardGenerator.js","Store/Reducers/Board/BoardReducer.js","Components/Board/Square.js","Store/Reducers/Players/PlayersReducer.js","Components/Board/PieceComponent.js","Components/Board/HorizontalBorder.js","Components/Board/Board.js","Store/store.js","Components/Header/Header.styles.js","Components/Header/Header.js","Components/PlayerInfo/PlayerInfo.styles.js","Components/PlayerInfo/PieceIcon.js","Components/PlayerInfo/PlayerInfo.js","Components/Actions/Actions.styles.js","Components/Actions/ResetBoard.js","Components/Actions/Actions.js","App.js","serviceWorker.js","index.js"],"names":["AppContainer","styled","div","GameBoard","StyledSquare","props","selected","killable","available","getAdjacentBorders","adjacent","white","ret","length","border","Border","top","bottom","left","right","StyledPiece","currentPlayer","upN","position","n","downN","leftN","rightN","upRightN","upLeftN","downLeftN","downRightN","Piece","calculatePossibleMoves","calculateDiagonalMoves","friendlyPieces","enemyPieces","moves","isFriendly","square","includes","isEnemy","addDiagonalUpLeftMoves","initialPosition","distance","upLeftMove","isRightColumn","push","addDiagonalUpRightMoves","upRightMove","isLeftColumn","addDiagonalDownRightMoves","downRightMove","addDiagonalDownLeftMoves","downLeftMove","calculateVerticalHorizontalMoves","addUpMoves","upMove","addDownMoves","downMove","addLeftMoves","leftMove","addRightMoves","rightMove","addIfNotFriendly","this","color","Pawn","up1","up2","down1","down2","upLeft","upRight","downLeft","downRight","toLeftAttack","toRightAttack","firstMove","icon","name","Knight","leftUp","rightUp","leftDown","rightDown","isToTheLeft","isToTheRight","Rook","Queen","verticalHorizontal","diagonal","concat","King","up","down","Bishop","verticalBorder","horizontalBorder","getPiece","piece","getAdjacentMoves","board","addIfNoEnemy","adjacency","adjacentHasEnemy","squareNumber","initialState","selectedPiece","availableMoves","player1KilledPieces","player2KilledPieces","createSlice","reducers","selectSquare","state","action","payload","removeSquareSelection","setMoves","movePiece","destinationSquare","resetBoard","reducer","actions","playerPieces","player","positions","i","boardSelector","React","memo","children","useSelector","dispatch","useDispatch","isAvailableMove","adjacentMoves","isSelected","isKillable","isWhite","startWhite","Math","ceil","getSquareColor","key","onClick","selectPlayer","extraReducers","currentPlayerSelector","players","player1Pieces","player1PiecesSelector","player2Pieces","player2PiecesSelector","isCurrentPlayer","movements","TopBorder","map","elem","index","BottomBorder","Board","boardList","squares","data","id","generateBoard","row","showStart","showEnd","Fragment","renderSquare","store","configureStore","boardReducer","playersReducer","StyledHeader","Header","playerName","InfoContainer","InfoTitle","KilledPiecesContainer","StyledPieceIcon","PieceIcon","pieceObject","PlayerInfo","killedPieces","player1KilledPiecesSelector","player2KilledPiecesSelector","Button","button","ActionsContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f7a16b37.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n    display: grid;\n    grid-template-columns: auto auto auto;\n    grid-template-rows: 75px auto auto;\n    grid-template-areas: \"....  header  ....\"\n                         \"player1  board  player2\"\n                         \"....  actions  ....\";\n    grid-auto-columns: min-content;\n`;","import styled from 'styled-components';\n\nexport const GameBoard = styled.div`\n    display: grid;\n    grid-template-columns: 20px repeat(8, 65px) 20px;\n    grid-template-rows: 20px repeat(8, 65px) 20px;\n    grid-area: board;\n    justify-self: center;\n    align-self: center;\n`;\n\nexport const StyledSquare = styled.div`\n    font-size: 45px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    user-select: none;\n    position: relative;\n    ${props => {\n        if (props.selected) {\n            return `\n                background-color: rgb(4, 41, 247, 0.7);\n                border: 4px solid rgb(4, 41, 247);\n            `;\n        } else if (props.killable) {\n            return `\n                background-color: rgb(244, 57, 0, 0.7);\n                border: 4px solid rgb(244, 57, 0);\n                cursor: pointer;\n            `;\n        } else if (props.available) {\n            return `\n                background-color: rgb(27, 145, 11, 0.7);\n                border: 4px solid rgb(27, 145, 11);\n                cursor: pointer;\n                ${getAdjacentBorders(props.adjacent)}\n            `;\n        } else if (props.white) {\n            return  `\n                background-color: rgb(223, 203, 167, 1);\n            `;\n        } else {\n            return `\n                background-color: rgb(125, 67, 38, 1)\n            `;\n        }\n\n    }}\n`;\n\nconst getAdjacentBorders = (adjacent) => {\n    let ret = ``;\n    if (!adjacent || adjacent.length === 0) return;\n    for (let border of adjacent) {\n        ret += `\n            border-${border}-width: 2px;\n        `;\n    }\n    return ret;\n}\n\nexport const Border = styled.div`\n    background-color: #491E10;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    user-select: none;\n    ${props => props.top && `\n        border-bottom: 1px solid #DFCBA7;\n    `}\n    ${props => props.bottom && `\n        border-top: 1px solid #DFCBA7;\n    `}\n    ${props => props.left && `\n        border-right: 1px solid #DFCBA7;\n    `}\n    ${props => props.right && `\n        border-left: 1px solid #DFCBA7;\n    `}\n`;\n\nexport const StyledPiece = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    ${props => {\n        if (props.currentPlayer) {\n            return  `cursor: pointer;`\n        } \n    }}\n    \n`;","import { isRightColumn, isLeftColumn } from \"./BoardGenerator\";\n\nexport const upN = (position, n) => position - 8*n;\nexport const downN = (position, n) => position + 8*n;\nexport const leftN = (position, n) => position - n;\nexport const rightN = (position, n) => position + n;\nexport const upRightN = (position, n) => position - n*7;\nexport const upLeftN = (position, n) => position - n*9;\nexport const downLeftN = (position, n) => position + n*7;\nexport const downRightN = (position, n) => position + n*9;\n\nexport const addDiagonalUpLeftMoves = (initialPosition, distance, moves, isFriendly, isEnemy) => {\n    const upLeftMove = upLeftN(initialPosition, distance);\n    if (upLeftMove <= 0 || isRightColumn(upLeftMove) || isFriendly(upLeftMove)) return;\n    else {\n        moves.push(upLeftMove);\n        if (!isEnemy(upLeftMove)) {\n            addDiagonalUpLeftMoves(initialPosition, distance + 1, moves, isFriendly, isEnemy);\n        }\n    }\n}\n\nexport const addDiagonalUpRightMoves = (initialPosition, distance, moves, isFriendly, isEnemy) => {\n    const upRightMove = upRightN(initialPosition, distance);\n    if (upRightMove <= 0 || isLeftColumn(upRightMove) || isFriendly(upRightMove)) return;\n    else {\n        moves.push(upRightMove);\n        if (!isEnemy(upRightMove)) {\n            addDiagonalUpRightMoves(initialPosition, distance + 1, moves, isFriendly, isEnemy);\n        }\n    }\n}\n\nexport const addDiagonalDownRightMoves = (initialPosition, distance, moves, isFriendly, isEnemy) => {\n    const downRightMove = downRightN(initialPosition, distance);\n    if (downRightMove > 64 || isLeftColumn(downRightMove) || isFriendly(downRightMove)) return;\n    else {\n        moves.push(downRightMove);\n        if (!isEnemy(downRightMove)) {\n            addDiagonalDownRightMoves(initialPosition, distance + 1, moves, isFriendly, isEnemy);\n        }\n    }\n}\n\nexport const addDiagonalDownLeftMoves = (initialPosition, distance, moves, isFriendly, isEnemy) => {\n    const downLeftMove = downLeftN(initialPosition, distance);\n    if (downLeftMove > 64 || isRightColumn(downLeftMove) || isFriendly(downLeftMove)) return;\n    else {\n        moves.push(downLeftMove);\n        if (!isEnemy(downLeftMove)) {\n            addDiagonalDownLeftMoves(initialPosition, distance + 1, moves, isFriendly, isEnemy);\n        }\n    }\n}\n\nexport const addUpMoves = (initialPosition, distance, moves, isFriendly, isEnemy) => {\n    const upMove = upN(initialPosition, distance);\n    if (upMove <= 0 || isFriendly(upMove)) return;\n    else {\n        moves.push(upMove);\n        if (!isEnemy(upMove)) {\n            addUpMoves(initialPosition, distance + 1, moves, isFriendly, isEnemy);\n        }\n    }\n}\n\nexport const addDownMoves = (initialPosition, distance, moves, isFriendly, isEnemy) => {\n    const downMove = downN(initialPosition, distance);\n    if (downMove > 64 || isFriendly(downMove)) return;\n    else {\n        moves.push(downMove);\n        if (!isEnemy(downMove)) {\n            addDownMoves(initialPosition, distance + 1, moves, isFriendly, isEnemy);\n        }\n    }\n}\n\nexport const addLeftMoves = (initialPosition, distance, moves, isFriendly, isEnemy) => {\n    const leftMove = leftN(initialPosition, distance);\n    if (isRightColumn(leftMove) || isFriendly(leftMove)) return;\n    else {\n        moves.push(leftMove);\n        if (!isEnemy(leftMove)) {\n            addLeftMoves(initialPosition, distance + 1, moves, isFriendly, isEnemy);\n        }\n    }\n}\n\nexport const addRightMoves = (initialPosition, distance, moves, isFriendly, isEnemy) => {\n    const rightMove = rightN(initialPosition, distance);\n    if (isLeftColumn(rightMove) || isFriendly(rightMove)) return;\n    else {\n        moves.push(rightMove);\n        if (!isEnemy(rightMove)) {\n            addRightMoves(initialPosition, distance + 1, moves, isFriendly, isEnemy);\n        }\n    }\n}","import { addDiagonalUpLeftMoves, addDiagonalUpRightMoves, addDiagonalDownRightMoves, addDiagonalDownLeftMoves, addUpMoves, addDownMoves, addLeftMoves, addRightMoves } from \"../Game/Moves\";\n\nclass Piece {\n    constructor(props) {\n        this.color = props.color;\n    }\n\n    calculatePossibleMoves = () => [];\n\n    calculateDiagonalMoves = (position, friendlyPieces, enemyPieces) => {\n        let moves = [];\n        const isFriendly = square => friendlyPieces.includes(square);\n        const isEnemy = square => enemyPieces.includes(square);\n        \n        addDiagonalUpLeftMoves(position, 1, moves, isFriendly, isEnemy);\n        addDiagonalUpRightMoves(position, 1, moves, isFriendly, isEnemy);\n        addDiagonalDownRightMoves(position, 1, moves, isFriendly, isEnemy);\n        addDiagonalDownLeftMoves(position, 1, moves, isFriendly, isEnemy);\n\n        return moves;\n    }\n\n    calculateVerticalHorizontalMoves = (position, friendlyPieces, enemyPieces) => {\n        let moves = [];\n        const isFriendly = square => friendlyPieces.includes(square);\n        const isEnemy = square => enemyPieces.includes(square);\n        \n        addUpMoves(position, 1, moves, isFriendly, isEnemy);\n        addDownMoves(position, 1, moves, isFriendly, isEnemy);\n        addLeftMoves(position, 1, moves, isFriendly, isEnemy);\n        addRightMoves(position, 1, moves, isFriendly, isEnemy);\n        \n        return moves;\n    }\n\n    addIfNotFriendly = (position, friendlyPieces, moves) => {\n        if(!friendlyPieces.includes(position)) moves.push(position);\n    }\n}\n\nexport default Piece;","import Piece from './Piece';\nimport { isRightColumn, isLeftColumn } from '../Game/BoardGenerator';\nimport { upN, downN, upLeftN, upRightN, downLeftN, downRightN } from '../Game/Moves';\n\nclass Pawn extends Piece {\n    constructor(props) {\n        super(props);\n        this.icon = this.color === 'w' ? '♙' : '♟';\n        this.name = `${this.color}p`;\n    }\n\n    calculatePossibleMoves = (position, friendlyPieces, enemyPieces) => {\n        let moves = [];\n        const isEnemy = (square) => enemyPieces.includes(square);\n\n        const up1 = upN(position, 1);\n        const up2 = upN(position, 2);\n        const down1 = downN(position, 1);\n        const down2 = downN(position, 2);\n        const upLeft = upLeftN(position, 1);\n        const upRight = upRightN(position, 1);\n        const downLeft = downLeftN(position, 1);\n        const downRight = downRightN(position, 1);\n\n        const toLeftAttack = isLeftColumn(position) ? 0 : position;\n        const toRightAttack = isRightColumn(position) ? 0 : position;\n\n        const firstMove = this.color === 'w' ? position >= 49 : position <= 16;\n        if (this.color === 'w') {\n            if (!isEnemy(up1))\n                this.addIfNotFriendly(up1, friendlyPieces, moves);\n            if (firstMove && !(isEnemy(up1) || isEnemy(up2)))\n                this.addIfNotFriendly(up2, friendlyPieces, moves);\n            if ((toLeftAttack && isEnemy(upLeft)))\n                moves.push(upLeft);\n            if (toRightAttack && isEnemy(upRight))\n                moves.push(upRight);\n        } else {\n            if (!isEnemy(down1))\n                this.addIfNotFriendly(down1, friendlyPieces, moves);\n            if (firstMove && !(isEnemy(down1) || isEnemy(down2)))\n                this.addIfNotFriendly(down2, friendlyPieces, moves);\n            if (toLeftAttack && isEnemy(downLeft))\n                moves.push(downLeft);\n            if (toRightAttack && isEnemy(downRight))\n                moves.push(downRight);\n        }\n        return moves;\n    }\n}\n\nexport default Pawn;","import Piece from './Piece';\nimport { isRightColumn, isLeftColumn } from '../Game/BoardGenerator';\n\nclass Knight extends Piece {\n    constructor(props) {\n        super(props);\n        this.icon = props.color === 'w' ? '♘' : '♞';\n        this.name = `${this.color}h`;\n    }\n\n    calculatePossibleMoves = (position, friendlyPieces) => {\n        let moves = [];\n        const upLeft = position - 17;\n        const upRight = position - 15;\n        const leftUp = position - 10;\n        const rightUp = position - 6;\n        const downLeft = position + 15;\n        const downRight = position + 17;\n        const leftDown = position + 6;\n        const rightDown = position + 10;\n\n        const isToTheLeft = (position) => isLeftColumn(position) || position % 8 === 2;\n        const isToTheRight = (position) => isRightColumn(position) || position % 8 === 7; \n\n        if (upLeft > 0 && !isRightColumn(upLeft)) \n            this.addIfNotFriendly(upLeft, friendlyPieces, moves);\n        if (upRight > 0 && !isLeftColumn(upRight)) \n            this.addIfNotFriendly(upRight, friendlyPieces, moves);\n        if (leftUp > 0 && !isToTheRight(leftUp)) \n            this.addIfNotFriendly(leftUp, friendlyPieces, moves);\n        if (rightUp > 0 && !isToTheLeft(rightUp)) \n            this.addIfNotFriendly(rightUp, friendlyPieces, moves);\n        if (downLeft < 64 && !isRightColumn(downLeft)) \n            this.addIfNotFriendly(downLeft, friendlyPieces, moves);\n        if (downRight < 64 && !isLeftColumn(downRight)) \n            this.addIfNotFriendly(downRight, friendlyPieces, moves);\n        if (leftDown < 64 && !isToTheRight(leftDown)) \n            this.addIfNotFriendly(leftDown, friendlyPieces, moves);\n        if (rightDown < 64 && !isToTheLeft(rightDown)) \n            this.addIfNotFriendly(rightDown, friendlyPieces, moves);\n\n        return moves;\n    }\n}\n\nexport default Knight;","import Piece from './Piece';\n\nclass Rook extends Piece {\n    constructor(props) {\n        super(props);\n        this.icon = props.color === 'w' ? '♖' : '♜';\n        this.name = `${this.color}r`;\n    }\n\n    calculatePossibleMoves = (position, friendlyPieces, enemyPieces) => {\n        return this.calculateVerticalHorizontalMoves(position, friendlyPieces, enemyPieces);\n    }\n}\n\nexport default Rook;","import Piece from './Piece';\n\nclass Queen extends Piece {\n    constructor(props) {\n        super(props);\n        this.icon = props.color === 'w' ? '♕' : '♛';\n        this.name = `${this.color}q`;\n    }\n\n    calculatePossibleMoves = (position, friendlyPieces, enemyPieces) => {\n        const verticalHorizontal = this.calculateVerticalHorizontalMoves(position, friendlyPieces, enemyPieces);\n        const diagonal = this.calculateDiagonalMoves(position, friendlyPieces, enemyPieces);\n        return verticalHorizontal.concat(diagonal);\n    }\n\n}\n\nexport default Queen;","import Piece from './Piece';\nimport { isLeftColumn, isRightColumn } from '../Game/BoardGenerator';\nimport { upN, downN, leftN, rightN, upLeftN, upRightN, downLeftN, downRightN } from '../Game/Moves';\n\nclass King extends Piece {\n    constructor(props) {\n        super(props);\n        this.icon = props.color === 'w' ? '♔' : '♚';\n        this.name = `${this.color}k`;\n    }\n    calculatePossibleMoves = (position, friendlyPieces) => {\n        let moves = [];\n\n        const up = upN(position, 1);\n        const down = downN(position, 1);\n        const left = leftN(position, 1);\n        const right = rightN(position, 1);\n        const upLeft = upLeftN(position, 1);\n        const upRight = upRightN(position, 1);\n        const downLeft = downLeftN(position , 1);\n        const downRight = downRightN(position, 1);\n\n    \n        if (up > 0)\n            this.addIfNotFriendly(up, friendlyPieces, moves);\n        if (down < 64)\n            this.addIfNotFriendly(down, friendlyPieces, moves);\n        if (!isLeftColumn(left))\n            this.addIfNotFriendly(left, friendlyPieces, moves);\n        if (!isRightColumn(right))\n            this.addIfNotFriendly(right, friendlyPieces, moves);\n        if (upLeft > 0 && !isLeftColumn(upLeft))\n            this.addIfNotFriendly(upLeft, friendlyPieces, moves);\n        if (upRight > 0 && !isRightColumn(upRight))\n            this.addIfNotFriendly(upRight, friendlyPieces, moves);\n        if (downLeft < 64 && !isLeftColumn(downLeft))\n            this.addIfNotFriendly(downLeft, friendlyPieces, moves);\n        if (downRight < 64 && !isRightColumn(downRight)) \n            this.addIfNotFriendly(downRight, friendlyPieces, moves);\n    \n        return moves;\n    }\n}\n\nexport default King;","import Piece from './Piece';\n\nclass Bishop extends Piece {\n    constructor(props) {\n        super(props);\n        this.icon = props.color === 'w' ? '♗' : '♝';\n        this.name = `${this.color}b`;\n    }\n\n    calculatePossibleMoves = (position, friendlyPieces, enemyPieces) => {\n        return this.calculateDiagonalMoves(position, friendlyPieces, enemyPieces);\n    }\n}\n\nexport default Bishop;","import Pawn from '../Pieces/Pawn';\nimport Knight from '../Pieces/Knight';\nimport Rook from '../Pieces/Rook';\nimport Queen from '../Pieces/Queen';\nimport King from '../Pieces/King';\nimport Bishop from '../Pieces/Bishop';\n\nexport const initialBoard = [\n    'br','bh','bb','bq','bk','bb','bh','br',\n    'bp','bp','bp','bp','bp','bp','bp','bp',\n    '','','','','','','','',\n    '','','','','','','','',\n    '','','','','','','','',\n    '','','','','','','','',\n    'wp','wp','wp','wp','wp','wp','wp','wp',\n    'wr','wh','wb','wq','wk','wb','wh','wr'\n];\n\nexport const verticalBorder = [8,7,6,5,4,3,2,1];\nexport const horizontalBorder = ['', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', ''];\n\nexport const getPiece = (piece, color) => {\n    switch (piece) {\n        case 'p':\n            return new Pawn({color});\n        case 'r':\n            return new Rook({color});\n        case 'h':\n            return new Knight({color});\n        case 'q':\n            return new Queen({color});\n        case 'k':\n            return new King({color});\n        case 'b':\n            return new Bishop({color});\n        default:\n            return null;\n    }\n}\n\nexport const generateBoard = (board) => {\n    let squares = [];\n    let squareNumber = 1;\n    for (let data of board) {\n        if (!data) {\n            squares.push({\n                id: squareNumber++,\n                piece: null,\n            })\n        } else {\n            const color = data[0];\n            const piece = data[1];\n            squares.push({\n                piece: getPiece(piece, color),\n                id: squareNumber++,\n            })\n        }\n    }\n    return squares;\n}\n\nexport const getSquareColor = (squareNumber) => {\n    let row = Math.ceil(squareNumber/8);\n    let startWhite = row % 2 === 1;\n    return (startWhite && ((squareNumber % 8) % 2) === 1) || (!startWhite && ((squareNumber % 8) % 2) === 0);\n}\n\nexport const getAdjacentMoves = (square, moves, board) => {\n    let adjacent = [];\n    const left = square - 1;\n    const right = square + 1;\n    const top = square - 8;\n    const bottom = square + 8;\n\n    const adjacentHasEnemy = (position) => {\n        return !!board[position - 1]\n    };\n    const addIfNoEnemy = (position, adjacency) => !adjacentHasEnemy(position) && adjacent.push(adjacency);\n    \n    if (moves.includes(left) && !isRightColumn(left)) addIfNoEnemy(left, 'left');\n    if (moves.includes(right) && !isLeftColumn(right)) addIfNoEnemy(right, 'right');\n    if (moves.includes(top) && top > 0) addIfNoEnemy(top, 'top');\n    if (moves.includes(bottom) && bottom < 64) addIfNoEnemy(bottom, 'bottom');\n\n    return adjacent;\n}\n\nexport const getColorFromPlayer = (player) => player === 1 ? 'w' : 'b';\nexport const getPlayerFromColor = (color) => color === 'w' ? 1 : 2;\n\nexport const isRightColumn = (squareNumber) => squareNumber % 8 === 0;\nexport const isLeftColumn = (squareNumber) => squareNumber % 8 === 1;\n\n","import {createSlice} from '@reduxjs/toolkit';\nimport { initialBoard } from '../../../Game/BoardGenerator';\n\nconst initialState = {\n    board: initialBoard,\n    selectedPiece: {\n        square: 0,\n        piece: '',\n    },\n    availableMoves: [],\n    player1KilledPieces: [],\n    player2KilledPieces: [],\n};\n\nconst {reducer, actions} = createSlice({\n    name: 'board',\n    initialState,\n    reducers: {\n        selectSquare(state, action) {\n            state.selectedPiece = action.payload;\n        },\n        removeSquareSelection(state) {\n            state.selectedPiece = {\n                square: 0,\n                piece: '',\n            };\n        },\n        setMoves(state, action) {\n            state.availableMoves = action.payload;\n        },\n        movePiece(state, action) {\n            const destinationSquare = state.board[action.payload - 1];\n            if (destinationSquare) {\n                const color = destinationSquare[0];\n                const piece = destinationSquare[1];\n                if (color === 'w') state.player1KilledPieces.push(piece);\n                else state.player2KilledPieces.push(piece);\n            }\n\n            state.board[state.selectedPiece.square - 1] = '';\n            state.board[action.payload - 1] = state.selectedPiece.piece;\n            state.selectedPiece = {\n                square: 0,\n                piece: '',\n            };\n            state.availableMoves = [];\n        },\n        resetBoard: (state) => initialState,\n    }\n});\n\nconst playerPieces = (player, board) => {\n    let positions = [];\n    const color = player === 1 ? 'w' : 'b';\n    for (let i = 0; i < board.length; i++) {\n        if (board[i]) {\n            if(board[i][0] === color) positions.push(i+1);\n        }\n    }\n    return positions;\n}\n\nexport const player1PiecesSelector = (state) => {\n    const board = state.board.board;\n    return playerPieces(1, board);\n};\n\nexport const player2PiecesSelector = (state) => {\n    const board = state.board.board;\n    return playerPieces(2, board);\n};\nexport const  boardSelector = (state) => state.board;\nexport const player1KilledPiecesSelector = (state) => state.board.player1KilledPieces;\nexport const player2KilledPiecesSelector = (state) => state.board.player2KilledPieces;\n\nexport const {selectSquare, removeSquareSelection, setMoves, movePiece, resetBoard} = actions;\n\nexport default reducer;","import React from 'react';\nimport { StyledSquare } from './Board.styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { movePiece, boardSelector } from '../../Store/Reducers/Board/BoardReducer';\nimport { getSquareColor, getAdjacentMoves } from '../../Game/BoardGenerator';\n\nconst Square = ({squareNumber, children}) => {\n    const board = useSelector(state => boardSelector(state));\n    const dispatch = useDispatch();\n\n    const isAvailableMove = board.availableMoves.includes(squareNumber);\n    if (isAvailableMove) {\n        //to fix double borders, look for better solution\n        var adjacentMoves = getAdjacentMoves(squareNumber, board.availableMoves, board.board);\n    }\n\n    const isSelected = squareNumber === board.selectedPiece.square;\n    const isKillable = isAvailableMove && children !== null;\n    const isWhite = getSquareColor(squareNumber);\n\n    const handleClick = () => {\n        if (isAvailableMove) {\n            dispatch(movePiece(squareNumber));\n        }\n    }\n    return (\n        <StyledSquare \n            key={`square_${squareNumber}`} \n            adjacent={adjacentMoves} \n            onClick={() => handleClick()} \n            killable={isKillable} \n            available={isAvailableMove} \n            selected={isSelected} \n            white={isWhite}>\n                {children}\n        </StyledSquare>\n    )\n};\n\nexport default React.memo(Square);","import {createSlice} from '@reduxjs/toolkit';\nimport {movePiece, resetBoard} from '../Board/BoardReducer';\n\nconst {reducer, actions} = createSlice({\n    name: 'players',\n    initialState: {\n        currentPlayer: 1,\n    },\n    reducers: {\n        selectPlayer(state, action) {\n            state.currentPlayer = action.payload;\n        },\n    },\n    extraReducers: {\n        [movePiece]: (state) => {\n          state.currentPlayer = state.currentPlayer === 1 ? 2 : 1;\n        },\n        [resetBoard]: (state) => {\n            state.currentPlayer = 1;\n        }\n      }\n});\n\nexport const currentPlayerSelector = (state) => state.players.currentPlayer;\n\nexport const {selectPlayer} = actions;\n\nexport default reducer;","import React from 'react';\nimport { StyledPiece } from './Board.styles';\nimport { selectSquare, setMoves } from '../../Store/Reducers/Board/BoardReducer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { currentPlayerSelector } from '../../Store/Reducers/Players/PlayersReducer';\nimport { player1PiecesSelector, player2PiecesSelector } from '../../Store/Reducers/Board/BoardReducer';\nimport { getPlayerFromColor } from '../../Game/BoardGenerator';\n\nconst PieceComponent = ({piece, position}) =>{\n    const currentPlayer = useSelector(state => currentPlayerSelector(state));\n    const player1Pieces = useSelector(state => player1PiecesSelector(state));\n    const player2Pieces = useSelector(state => player2PiecesSelector(state));\n    const dispatch = useDispatch();\n    \n    const player = getPlayerFromColor(piece.color);\n\n    const friendlyPieces = player === 1 ? player1Pieces : player2Pieces;\n    const enemyPieces = player === 1 ? player2Pieces : player1Pieces;\n\n    const isCurrentPlayer = player === currentPlayer;\n\n\n    const handleClick = () => {\n        if (!isCurrentPlayer) return null;\n        dispatch(selectSquare({\n            square: position,\n            piece: piece.name,\n        }));\n        const movements = piece.calculatePossibleMoves(position, friendlyPieces, enemyPieces);\n        dispatch(setMoves(movements));\n    }\n\n    return (\n        <StyledPiece currentPlayer={isCurrentPlayer} onClick={handleClick}>\n            {piece.icon}\n        </StyledPiece>\n    )\n};\n\nexport default React.memo(PieceComponent);","import React from 'react';\nimport { horizontalBorder } from '../../Game/BoardGenerator';\nimport { Border } from './Board.styles';\n\nexport const TopBorder = () => {\n    return (\n        horizontalBorder.map((elem, index) => (\n            <Border key={`border_top_${index}`} top={!!elem}>{elem}</Border>)\n        )\n    )\n    \n};\n\nexport const BottomBorder = () => {\n    return (\n        horizontalBorder.map((elem, index) => (\n            <Border key={`border_bottom_${index}`} bottom={!!elem}>{elem}</Border>)\n        )\n    )\n};","import React from 'react';\nimport { GameBoard, Border } from './Board.styles';\nimport Square from './Square';\nimport { generateBoard, verticalBorder, isLeftColumn, isRightColumn } from '../../Game/BoardGenerator';\nimport PieceComponent from './PieceComponent';\nimport {useSelector} from 'react-redux';\nimport { boardSelector } from '../../Store/Reducers/Board/BoardReducer';\nimport { TopBorder, BottomBorder} from './HorizontalBorder';\n\nconst renderSquare = (square) => {\n    const row = Math.ceil(square.id/8);\n    const showStart = isLeftColumn(square.id);\n    const showEnd = isRightColumn(square.id);\n    return (\n        <React.Fragment key={`square_container_${square.id}`}>\n            {showStart && <Border key={`border_left_${verticalBorder[row-1]}`} left>{verticalBorder[row-1]}</Border>}\n            <Square squareNumber={square.id}>\n                {square.piece && \n                    <PieceComponent position={square.id} piece={square.piece} />\n                }\n            </Square>\n            {showEnd && <Border key={`border_right_${verticalBorder[row-1]}`} right>{verticalBorder[row-1]}</Border>}\n        </React.Fragment>\n    )\n}\n\nconst Board = () => {\n    const board = useSelector(state => boardSelector(state));\n    const boardList = generateBoard(board.board);\n    \n    return (\n        <GameBoard>\n            <TopBorder />\n            {boardList.map(square => renderSquare(square))}\n            <BottomBorder />\n        </GameBoard>\n    )\n};\n\nexport default Board;","import {configureStore} from '@reduxjs/toolkit';\nimport boardReducer from './Reducers/Board/BoardReducer';\nimport playersReducer from './Reducers/Players/PlayersReducer';\n\nconst store = configureStore({\n    reducer: {\n        board: boardReducer,\n        players: playersReducer,\n    }\n});\n\nexport default store;","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n    grid-area: header;\n    align-self: center;\n    justify-self: center;\n    font-weight: bold;\n    font-size: 25px;\n`;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { currentPlayerSelector } from '../../Store/Reducers/Players/PlayersReducer';\nimport { StyledHeader } from './Header.styles';\n\nconst Header = () => {\n    const currentPlayer = useSelector(state => currentPlayerSelector(state));\n    const playerName = currentPlayer === 1 ? 'White' : 'Black';\n    \n    return (\n        <StyledHeader>\n            {`Current player: ${playerName}`}\n        </StyledHeader>\n    )\n}\n\nexport default Header;","import styled from 'styled-components';\n\nexport const InfoContainer = styled.div`\n    ${props =>{\n        if(props.player === 1) {\n            return `\n                grid-area: player1;\n            `;\n        } else {\n            return `\n                grid-area: player2;\n            `;\n        }\n    }}\n    justify-self: center;\n    padding: 50px 15px;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n`;\n\nexport const InfoTitle = styled.div`\n    font-weight: bold;\n    font-size: 20px;\n    align-text: center;\n`;\n\nexport const KilledPiecesContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    padding: 40px 0;\n    min-width: 200px;\n`;\n\nexport const StyledPieceIcon = styled.div`\n    font-size: 45px;\n`;","import React from 'react';\nimport { getPiece } from '../../Game/BoardGenerator';\nimport { StyledPieceIcon } from './PlayerInfo.styles';\n\nconst PieceIcon = ({player, piece}) => {\n    const color = player === 1 ? 'w' : 'b';\n    const pieceObject = getPiece(piece, color);\n\n    return (\n        <StyledPieceIcon>\n            {pieceObject.icon}\n        </StyledPieceIcon>\n    )\n}\n\nexport default PieceIcon;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { player1KilledPiecesSelector, player2KilledPiecesSelector } from '../../Store/Reducers/Board/BoardReducer';\nimport { InfoContainer, InfoTitle, KilledPiecesContainer } from './PlayerInfo.styles';\nimport PieceIcon from './PieceIcon';\n\nconst PlayerInfo = ({player}) => {\n    const killedPieces = useSelector(state => player === 1 ? player1KilledPiecesSelector(state)\n                                        : player2KilledPiecesSelector(state))\n\n    return (\n        <InfoContainer player={player}>\n            <InfoTitle>Player {player}</InfoTitle>\n            <KilledPiecesContainer>\n                {killedPieces.map((piece, index) => <PieceIcon key={`dead_piece_${player}_${index}`} piece={piece} player={player} />)}\n            </KilledPiecesContainer>\n        </InfoContainer>\n    )\n}\n\nexport default PlayerInfo;","import styled from 'styled-components';\n\nexport const Button = styled.button`\n    padding: 10px 20px;\n    color: white;\n    background-color: rgb(12, 138, 242);\n    border-radius: 5px;\n    cursor: pointer;\n    border: 0;\n    font-size: 20px;\n`;\n\nexport const ActionsContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    grid-area: actions;\n    height: 75px;\n`;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { resetBoard } from '../../Store/Reducers/Board/BoardReducer';\nimport { Button } from './Actions.styles';\n\nconst ResetBoard = () => {\n    const dispatch = useDispatch();\n    const handleClick = () => {\n        dispatch(resetBoard());\n    }\n    return (\n        <Button onClick={() => handleClick()}>\n            Reset Board\n        </Button>\n    )\n}\n\nexport default React.memo(ResetBoard);","import React from 'react';\nimport ResetBoard from './ResetBoard';\nimport { ActionsContainer } from './Actions.styles';\n\nconst Actions = () => (\n    <ActionsContainer>\n        <ResetBoard />\n    </ActionsContainer>\n);\n\nexport default React.memo(Actions);","import React from 'react';\nimport {AppContainer} from './App.styles';\nimport './App.css';\nimport Board from './Components/Board/Board';\nimport { Provider } from \"react-redux\";\nimport store from './Store/store';\nimport Header from './Components/Header/Header';\nimport PlayerInfo from './Components/PlayerInfo/PlayerInfo';\nimport Actions from './Components/Actions/Actions';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppContainer>\n        <Header />\n        <PlayerInfo player={1} />\n        <Board />\n        <PlayerInfo player={2} />\n        <Actions />\n      </AppContainer>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}